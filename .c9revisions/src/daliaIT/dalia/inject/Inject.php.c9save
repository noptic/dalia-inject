{"ts":1359920363482,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1359920374806,"patch":[[{"diffs":[[1,"<?php\nnamespace daliaIT\\co3;\nuse ReflectionClass;\nclass  Inject implements IInject\n{\n    public static function inject($properties){\n        $class = get_called_class();\n        $args = func_get_args();\n        array_shift($args);\n        if($args){\n            $reflect = new ReflectionClass($class); \n            $instance = $reflect->newInstanceArgs($args);\n        } else {\n            $instance = new $class();\n        }\n            \n        if($properties){\n            foreach( static::getInjectableProperties() as $property ){\n                if( array_key_exists( $property, $properties ) ){\n                    $instance->$property = $properties[$property];\n                }\n            }   \n        }\n        $instance->postInject();\n        return $instance;\n    }\n    \n    public static function injectMany($propertiesArray){\n        $objects = array();\n        foreach($propertiesArray as $key => $properties){\n            $objects[$key] = static::inject( $properties );\n        }\n        return $objects;\n    }\n    \n    public function extract(){\n        $result = array();\n        foreach( static::getInjectableProperties() as $property ){\n            $result[$property] = $this->$property;\n        }\n        return $result;\n    }\n    \n    protected static function getInjectableProperties(){\n        return array_keys( get_class_vars( get_called_class() ) );\n    }\n    \n    protected function postInject(){\n        return $this;\n    }\n}\n?>"]],"start1":0,"start2":0,"length1":0,"length2":1457}]],"length":1457,"saved":false}
{"ts":1359920404900,"patch":[[{"diffs":[[0,"<?php\n"],[1,"/*/ \ntype:       interface\nauthor:     Oliver Anan <oliver@ananit.de>\npackage:    dalia-it/dalia-inject\ntags:       [injection, factory]\n================================================================================\nIInject\n================================================================================\nRequired to craete class instnaces from arrays and vice versa.\n\nUsage\n--------------------------------------------------------------------------------\nThis interface is intended to be used for models. \nData retived vie JSON or database querries can be turned into  objects without \ncreating constructors for each model.\nThe integrity of the data must be ensured by the calling code \n \nAll properties which are only used internaly (e.g. buffers amd file handles) \nshould be private.\n\nUsing injectaion allows setting protected object properties when the object is \ncreated.\n\nMethods\n--------------------------------------------------------------------------------\n\n### public static object inject(array $properties)\n    \nCreates a new  instance and injects the properties from an array.    \nThe properies names are used as array keys\nAny additional parameters are passed to the class constructor.\n#### Implemantation\n - Implementing classes should *not* allow injecting *unknown properties*\n - *Private* properties should *not* be injected\n - * Always* return an instance of the *class* which was *called*.\n - additional arguments should be passed to the class constructor\n \n#### Parameters\n - `array $properties` Associative array containig the desired properties.\n - mixed $arg_1 ... $arg_n Arguments for the class constructor.\n \n#### Returns\n`IInject` instance of the called class\n\n\n### public static array **extract()** ###\nReturns an objects properties as array.\nThe properies names are used as array keys.\n\n#### Implementation\n - should not return private properties\n - must not return properties which are not defined for this objects class\n \n#### Returns\n`array` An associative array containing the objects properties\n \nSource\n--------------------------------------------------------------------------------\n/*/\n"],[0,"namespac"]],"start1":0,"start2":0,"length1":14,"length2":2139}]],"length":3582,"saved":false}
{"ts":1359920431636,"patch":[[{"diffs":[[0,"d.\n\n"],[-1,"Methods\n--------------------------------------------------------------------------------\n\n### public static object inject(array $properties)\n    \nCreates a new  instance and injects the properties from an array.    \nThe properies names are used as array keys\nAny additional parameters are passed to the class constructor.\n#### Implemantation\n - Implementing classes should *not* allow injecting *unknown properties*\n - *Private* properties should *not* be injected\n - * Always* return an instance of the *class* which was *called*.\n - additional arguments should be passed to the class constructor\n \n#### Parameters\n - `array $properties` Associative array containig the desired properties.\n - mixed $arg_1 ... $arg_n Arguments for the class constructor.\n \n#### Returns\n`IInject` instance of the called class\n\n\n### public static array **extract()** ###\nReturns an objects properties as array.\nThe properies names are used as array keys.\n\n#### Implementation\n - should not return private properties\n - must not return properties which are not defined for this objects class\n \n#### Returns\n`array` An associative array containing the objects properties\n \n"],[0,"Sour"]],"start1":882,"start2":882,"length1":1161,"length2":8}]],"length":2429,"saved":false}
{"ts":1359920461324,"patch":[[{"diffs":[[0,"=======\n"],[-1,"I"],[0,"Inject\n="]],"start1":216,"start2":216,"length1":17,"length2":16}]],"length":2428,"saved":false}
{"ts":1359920470195,"patch":[[{"diffs":[[0,":       "],[-1,"interface"],[1,"class\n"],[0,"\nauthor:"]],"start1":15,"start2":15,"length1":25,"length2":22}]],"length":2425,"saved":false}
{"ts":1359920472696,"patch":[[{"diffs":[[0,"  class\n"],[1,"sub"],[0,"\nauthor:"]],"start1":21,"start2":21,"length1":16,"length2":19}]],"length":2428,"saved":false}
{"ts":1359920476403,"patch":[[{"diffs":[[0,"lass\nsub"],[1,"type"],[0,"\nauthor:"]],"start1":24,"start2":24,"length1":16,"length2":20}]],"length":2432,"saved":false}
{"ts":1359920477464,"patch":[[{"diffs":[[0,"\nsubtype"],[1,":"],[0,"\nauthor:"]],"start1":28,"start2":28,"length1":16,"length2":17}]],"length":2433,"saved":false}
{"ts":1359920478728,"patch":[[{"diffs":[[0,"subtype:"],[1,"    "],[0,"\nauthor:"]],"start1":29,"start2":29,"length1":16,"length2":20}]],"length":2437,"saved":false}
{"ts":1359920483750,"patch":[[{"diffs":[[0,"ype:    "],[1,"pseuo"],[0,"\nauthor:"]],"start1":33,"start2":33,"length1":16,"length2":21}]],"length":2442,"saved":false}
{"ts":1359920485730,"patch":[[{"diffs":[[0,"   pseuo"],[1,"-t"],[0,"\nauthor:"]],"start1":38,"start2":38,"length1":16,"length2":18}]],"length":2444,"saved":false}
{"ts":1359920487997,"patch":[[{"diffs":[[0," pseuo-t"],[1,"reat"],[0,"\nauthor:"]],"start1":40,"start2":40,"length1":16,"length2":20}]],"length":2448,"saved":false}
{"ts":1359920531129,"patch":[[{"diffs":[[0,"pseuo-tr"],[-1,"eat"],[1,"ai"],[0,"\nauthor:"]],"start1":41,"start2":41,"length1":19,"length2":18}]],"length":2447,"saved":false}
{"ts":1359920532486,"patch":[[{"diffs":[[0,"euo-trai"],[1,"t"],[0,"\nauthor:"]],"start1":43,"start2":43,"length1":16,"length2":17}]],"length":2448,"saved":false}
{"ts":1359926031869,"patch":[[{"diffs":[[0,"---\n"],[-1,"This interface is intended to be used for models. \nData retived vie JSON or database querries can be turned into  objects without \ncreating constructors for each model.\nThe integrity of the data must be ensured by the calling code \n \nAll properties which are only used internaly (e.g. buffers amd file handles) \nshould be private.\n\nUsing injectaion allows setting protected object properties when the object is \ncreated."],[0,"\n\nSo"]],"start1":479,"start2":479,"length1":428,"length2":8}]],"length":2028,"saved":false}
{"ts":1359926490387,"patch":[[{"diffs":[[0,"-------\n"],[1,"Pseudi"],[0,"\n\nSource"]],"start1":475,"start2":475,"length1":16,"length2":22}]],"length":2034,"saved":false}
{"ts":1359926495110,"patch":[[{"diffs":[[0,"-\nPseudi"],[1,"-"],[0,"\n\nSource"]],"start1":481,"start2":481,"length1":16,"length2":17}]],"length":2035,"saved":false}
{"ts":1359926499766,"patch":[[{"diffs":[[0,"-------\n"],[-1,"P"],[1,"This is a "],[0,"seudi-\n\n"]],"start1":475,"start2":475,"length1":17,"length2":26}]],"length":2044,"saved":false}
{"ts":1359926502208,"patch":[[{"diffs":[[0,"is is a "],[1,"p"],[0,"seudi-\n\n"]],"start1":485,"start2":485,"length1":16,"length2":17}]],"length":2045,"saved":false}
{"ts":1359926567556,"patch":[[{"diffs":[[0,"seud"],[-1,"i-"],[1,"o-trait."],[0,"\n\nSo"]],"start1":494,"start2":494,"length1":10,"length2":16}]],"length":2051,"saved":false}
{"ts":1359926759404,"patch":[[{"diffs":[[0,"o-trait."],[1," "],[0,"\n\nSource"]],"start1":498,"start2":498,"length1":16,"length2":17}]],"length":2052,"saved":false}
{"ts":1359926766754,"patch":[[{"diffs":[[0,"-trait. "],[1,"It "],[0,"\n\nSource"]],"start1":499,"start2":499,"length1":16,"length2":19}]],"length":2055,"saved":false}
{"ts":1359926773421,"patch":[[{"diffs":[[0,"ait. It "],[1,"is recomended that you "],[0,"\n\nSource"]],"start1":502,"start2":502,"length1":16,"length2":39}]],"length":2078,"saved":false}
{"ts":1359926775634,"patch":[[{"diffs":[[0,"hat you "],[1,"use r"],[0,"\n\nSource"]],"start1":525,"start2":525,"length1":16,"length2":21}]],"length":2083,"saved":false}
{"ts":1359926776566,"patch":[[{"diffs":[[0,"you use "],[-1,"r"],[1,"\""],[0,"\n\nSource"]],"start1":529,"start2":529,"length1":17,"length2":17}]],"length":2083,"saved":false}
{"ts":1359926780088,"patch":[[{"diffs":[[0,"ou use \""],[1,"the dal"],[0,"\n\nSource"]],"start1":530,"start2":530,"length1":16,"length2":23}]],"length":2090,"saved":false}
{"ts":1359926781752,"patch":[[{"diffs":[[0,"\"the dal"],[1,"ia"],[0,"\n\nSource"]],"start1":537,"start2":537,"length1":16,"length2":18}]],"length":2092,"saved":false}
{"ts":1359926801697,"patch":[[{"diffs":[[0,"you use "],[1,"the packa"],[0,"\"the dal"]],"start1":529,"start2":529,"length1":16,"length2":25}]],"length":2101,"saved":false}
{"ts":1359926803763,"patch":[[{"diffs":[[0,"he packa"],[1,"ge "],[0,"\"the dal"]],"start1":538,"start2":538,"length1":16,"length2":19}]],"length":2104,"saved":false}
{"ts":1359926806677,"patch":[[{"diffs":[[0,"ackage \""],[-1,"the "],[0,"dalia\n\nS"]],"start1":542,"start2":542,"length1":20,"length2":16}]],"length":2100,"saved":false}
{"ts":1359926809672,"patch":[[{"diffs":[[0,"e \"dalia"],[1,"-it/"],[0,"\n\nSource"]],"start1":547,"start2":547,"length1":16,"length2":20}]],"length":2104,"saved":false}
{"ts":1359926813039,"patch":[[{"diffs":[[0,"package "],[1,"\n"],[0,"\"dalia-i"]],"start1":541,"start2":541,"length1":16,"length2":17}]],"length":2105,"saved":false}
{"ts":1359926826679,"patch":[[{"diffs":[[0,"alia-it/"],[1,"ro"],[0,"\n\nSource"]],"start1":552,"start2":552,"length1":16,"length2":18}]],"length":2107,"saved":false}
{"ts":1359926828471,"patch":[[{"diffs":[[0,"ia-it/ro"],[1,"ugh\""],[0,"\n\nSource"]],"start1":554,"start2":554,"length1":16,"length2":20}]],"length":2111,"saved":false}
{"ts":1359926835465,"patch":[[{"diffs":[[0,"t/rough\""],[1,"  t"],[0,"\n\nSource"]],"start1":558,"start2":558,"length1":16,"length2":19}]],"length":2114,"saved":false}
{"ts":1359926837412,"patch":[[{"diffs":[[0,"ough\"  t"],[1,"o impo"],[0,"\n\nSource"]],"start1":561,"start2":561,"length1":16,"length2":22}]],"length":2120,"saved":false}
{"ts":1359926838963,"patch":[[{"diffs":[[0," to impo"],[1,"rt "],[0,"\n\nSource"]],"start1":567,"start2":567,"length1":16,"length2":19}]],"length":2123,"saved":false}
{"ts":1359926845937,"patch":[[{"diffs":[[0," import "],[1,"this trait into a"],[0,"\n\nSource"]],"start1":570,"start2":570,"length1":16,"length2":33}]],"length":2140,"saved":false}
{"ts":1359926876916,"patch":[[{"diffs":[[0,"-trait. "],[1,"\n"],[0,"It is re"]],"start1":499,"start2":499,"length1":16,"length2":17}]],"length":2141,"saved":false}
{"ts":1359926883597,"patch":[[{"diffs":[[0,"-trait. "],[1,"Since "],[0,"\nIt is r"]],"start1":499,"start2":499,"length1":16,"length2":22}]],"length":2147,"saved":false}
{"ts":1359927039060,"patch":[[{"diffs":[[0,". Since "],[1,"traits a"],[0,"\nIt is r"]],"start1":505,"start2":505,"length1":16,"length2":24}]],"length":2155,"saved":false}
{"ts":1359927106573,"patch":[[{"diffs":[[0,"it. "],[-1,"Since traits a"],[1,"You should \nPHPSince traits are only available "],[0,"\nIt "]],"start1":503,"start2":503,"length1":22,"length2":55}]],"length":2188,"saved":false}
{"ts":1359927115962,"patch":[[{"diffs":[[0,"nClass;\n"],[1,"final "],[0,"class  I"]],"start1":773,"start2":773,"length1":16,"length2":22}]],"length":2194,"saved":false}
{"ts":1359927184576,"patch":[[{"diffs":[[0,"ait."],[-1," You should"],[1,"\n\n### PHP >= 5.4:\nUse"],[0," \nPH"]],"start1":502,"start2":502,"length1":19,"length2":29}]],"length":2204,"saved":false}
{"ts":1359927231126,"patch":[[{"diffs":[[0,"nClass;\n"],[1,"\n"],[0,"final cl"]],"start1":783,"start2":783,"length1":16,"length2":17},{"diffs":[[0," class  "],[1,"\n\n"],[0,"Inject i"]],"start1":797,"start2":797,"length1":16,"length2":18}]],"length":2207,"saved":false}
{"ts":1359927232722,"patch":[[{"diffs":[[0,"nClass;\n"],[1,"/"],[0,"\nfinal c"]],"start1":783,"start2":783,"length1":16,"length2":17}]],"length":2208,"saved":false}
